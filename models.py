from pydantic import BaseModel
from datetime import datetime
from uuid import UUID


class InvalidMariaArguments(Exception):
    def __init__(
            self, 
            message: str
        ) -> None:

        super().__init__(f"Invalid Maria Arguments! The connection establishing was failed! Full exception {message}")

class User(BaseModel):
    """
        User class

        :param id: user id generated by uuid4
        :type id: str

        :param email: user's email
        :type email: str

        :param login: user's login (created by user)
        :type login: str

        :param password: sha512 hash of user's password
        :type password: str

        :param createdAt: the exact time when user was created
        :type createdAt: datetime

        :param updatedAt: the time when user's info was changed
        :type updatedAt: datetime
    """

    id: UUID
    email: str
    login: str
    password: str
    createdAt: datetime
    updatedAt: datetime

    # def __init__(
    #         self,
    #         id: UUID,
    #         email: str,
    #         login: str,
    #         password: str,
    #         createdAt: datetime,
    #         updatedAt: datetime
    #     ) -> None:
        
    #     self.id = str(id)
    #     self.email = email
    #     self.login = login
    #     self.password = password
    #     self.createdAt = createdAt
    #     self.updatedAt = updatedAt


class Post(BaseModel):
    """
    Post class

    :param id: unique id of a post
    :type id: UUID

    :param authorId: author's id
    :type authorId: UUID

    :param title: post's title
    :type title: str

    :param content: post's content
    :type content: str

    :param createdAt: time of post creation
    :type createdAt: datetime

    :param updatedAt: time when post was updated
    :type updatedAt: datetime    
    """
    id: UUID
    authorId: UUID
    title: str
    content: str
    createdAt: datetime
    updatedAt: datetime